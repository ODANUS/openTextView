import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:open_textview/isar_ctl.dart';
import 'package:package_info/package_info.dart';

// 34.7MB -> 52.4MB

class DeveloperNotes extends GetView {
  final String content = """
---
1.9.9 (2022 04 15) 패치내역 :
1. 갤럭시 스토어를 위해 설정에 우측 상단 리뷰 버튼을 설치한 스토어에 따라 다르게 표현 하도록 수정 하였습니다. 

2. epub 내부에 폰트가 내장 되어 있는경우 해당 폰트로 이미지로 만든뒤 ocr 처리를 하도록 수정 하였습니다. 
  - 해당 폰트를 그냥 로딩해서 보여주려고 했는데. 그렇게 할경우 tts 작동이 안됩니다. 
  - tts 에 진심인 저는 tts 가 작동 안되면 의미가 없다고 생각 합니다. 
  - 저는 이제 눈으로 책을 못보겠더라고요. 

3. 내서재에 이미지 파일이 원래 안들어가야 하는데. 갤럭시 스토어 측에선 어떻게 넣은거 같습니다. 이미지 안열린다고 메일이 왔더라고요.
  - 내서재에 이미지 파일이 감지되면 바로 지우도록 하였습니다.

4. epub 가 변환 실패한 파일은 경고 문구를 띄우도록 하였습니다.
  - epub 에 이상한 변조를 하는 경우가 있습니다. 
  - 그러다보니 표준 지키면서 만든 epub 리더 는 작동 안하는 경우가 있습니다. 
  - 지금 epub 파일은 제가 압축 풀고 내부 분석해서 텍스트로 변환 하고 있습니다. 
  - 만약 안되는 파일이 발견되면 메일로 제보 부탁드립니다. 

5. epub , zip 파일 변환 시, 파일명에 날자,시간을 제거 하였습니다. 
  - 너무 난잡해 보여서 지웠습니다. 

* 추가 : 
    제보는 저에게 상당한 도움이 됩니다. 
    버그 제보, 기능추가 제보, 불편한 부분에 대한 제보. 
    이와 같은 제보가 있었기에 요 며칠 상당히 많은 기능이 추가 되고 수정 되었습니다. 
    제가 A~Z 까지 전부 수정해드린다고 장담드릴 수는 없지만. 불편한 부분이 있다면 최대한 개선할수 있습니다. 
    
    저는 tts 만 사용합니다. 오픈텍뷰 에서 tts 기능은 상당히 높은 완성도룰 자랑한다고 생각 합니다.

    tts 외 다른쪽은 문제가있어도 제가 느끼지를 못합니다.
    
    제보 해주시면 빠른 시일내로 수정 해보도록 하겠습니다. 
    


1.9.7 (2022 04 13) 패치내역 :
1. epub -> txt 파일 변환시 챕터가 가끔 혼동되어 나오는 현상 수정. 

1.9.5 (2022 04 13) 패치내역 :

1. 특정 epub -> txt 변환 알고리즘을 추가 했습니다. 
  - 몇몇 epub 파일은 글자 크기가 0 으로 되어 있는 경우가 있었습니다. 
  - 뷰어로 볼때는 문제없이 보이지만, 텍스트로 변환하면 문장사이에 엉뚱한 문자가 껴있는 경우가 있어서 해당 기능을 추가 하였습니다. 

2. 아이콘을 수정 하였습니다. 
  - 이거 디자인 하는 형한테 부탁해서 같이 만든 아이콘입니다. 개인적으로 상당히 좋은거 같습니다. 
  - 밑에는 AI 하면 연상되는 원 달린 선으로 책 모양을 그렸습니다. 
  - 상단에는 사운드 웨이브 느낌으로 디자인 하여 TTS 를 강조 해 보았습니다.

3. 13 일 부로 갤럭시 스토어에도 출시 하였습니다. 

4. 주말에 맥북 셋팅 하면 아이폰 출시 준비를 할 예정 입니다. 
  - 인공지능 이미지 인식은 아마 빠진상태로 출시가 될듯합니다. 
  - 구글에서는 아이폰용으로 제공 하고 있긴하지만. 제가 사용하는 라이브러리 는 아직 아이폰 용으로 개발 되지 않았습니다. 

5. 내서재 에서 파일 열때 구글 드라이브, Dropbox, iCloud, nextCloud 같은 클라우드 도 지원 합니다. 
  - 구글 드라이브 어플이 설치 된 상태에서 내서재 -> 파일 추가 -> 좌측상단 메뉴 에서 열 수 있습니다. 
  - 모르시는분도 계실꺼 같아서 언급 했습니다. 


---
1.9.4 (2022 04 12) 패치내역 :
1. 어플 아이콘을 수정하였습니다. 
2. 어플 실행할때 하얀색 화면이 뜨는것 때문에 인트로 이미지 추가 하였습니다. 

1.9.2 (2022 04 11) 패치내역 :
1. OCR 페이지 우측 상단에 가위버튼을 추가 하였습니다. (이미지 자르기)
  - 두페이지 로 나뉘어진 파일의 경우 우선 페이지를 좌우로 잘라 주시고 인식 해주시기 바랍니다. 
  - 그렇지 않을경우 두페이지의 단어가 중간중간 섞여 나오는걸 확인 하였습니다. 

---

1.9.1 (2022 04 10) 패치내역 :
1. 내서재 에서 확장자 기준으로 필터 할수 있게 기능을 추가 하였습니다. 
  - epub 변환, 인공지능 문자 인식 기능 추가 하면서 내서재가 상당히 복잡해 진거 같아 추가 하였습니다. 

* 추가:
1. 이제 뷰어 쪽이랑 내 서재 쪽은 완성도가 어느정도 올라갔다고 판단됩니다. 
2. 한동안 패치는 히스토리 부분 으로 진행될 예정입니다. 

---
1.9.0 (2022 04 10) 패치내역 :
1. 뷰어 맨하단 글자가 가끔 깜빡이는 현상 완화. 
  - 뷰어 부분은 좌표 계산 부터 많은 부분을 직접 구현했습니다. 
  - 뷰어쪽 대부분 버그는 제가 좌표계산을 잘못한 문제 입니다. ㅠㅠ 
  - 버그 발견시 제보 부탁드립니다. 

2. 뷰어,서재,설정, 히스토리 에 배경 이미지를 설정 할 수 있습니다.  
  - 뷰어 -> 톱니바퀴 -> UI 설정 에서 설정 가능합니다. 
  - 인터넷 에서 찾은 무료이미지 9 개를 추가 하였고. 투명도를 적절히 줘서 은은하게 표현 되도록 하였습니다. 
  - 투명도는 임의로 설정 이 가능합니다. 

3. 과거 데이터 베이스를 연동 로직을 제거 하였습니다. 며칠 상황봐서 해당 라이브러리를 제거 하겠습니다. 

---
1.8.7 (2022 04 09) 패치내역 :

1. 분할 압축 단위를 500 -> 1000 으로 변경 하였습니다.  

1.8.6 (2022 04 09) 패치내역 :
1. 압축 해제시 자연정렬 알고리즘을 통해 파일 을 정렬한후 압축 해제를 하였습니다. 
2. ocr 페이지 또한 자연정렬 알고리즘을 통해 정렬 한뒤 이미지 인식을 하게 됩니다. 

1.8.1 (2022 04 09) 패치내역 :
1. 이미지가 500 장이 넘는 압축파일의 경우 분할 압축을 실행하여 500 장씩 나눠서 따로 저장하게 됩니다. 
  - 중간에 오류가 발생할 경우 다시 대기 해야 하는 상황이 생겨 분할 하여 처리 하도록 수정 하였습니다. 
  - 500개 이미지는 은 대략 1분 40 초 처리 분량 입니다. 

1.8.0 (2022 04 08) 패치내역 :
1. 개행 정리 로직추가 개선, 
  - 한줄의 시작이 " 일 경우 엔터 처리. 한줄에 " 로 시작한경우 그줄의 [다.] 개행은 무시 
  - ocr 읜 경우 ["] 쌍따옴표가 인식이 안되는 경우가 있어서 [말하기] 의 시작과 끝을 구분해서 개행하지는 않습니다. 

2. 광고 흑화현상 개선. 
  - 처음 어플이 실행 되면 모든 광고를 로드 해오는데. 시간이 지나면 해당 광고 는 페기 되는거 같습니다. 
  - 미리 로드 하지 않고 광고를 보여줄때 로드 하도록 수정 하였습니다. 

3. 내서재에 이미지 변환 , epub 변환 지원 한다고 써놓았습니다! 

---

1.7.9 (2022 04 08) 패치내역 :

1. 개행 정리 로직을 한줄 개행에서 두줄 개행으로 변경 하였습니다. 
  - 내서재 ui 가 보기 불편하여 버튼을 4개로 배치하고 다른이름으로 저장은 우선 제거 하였습니다. 

2. 30 초 광고 를 전면 보상형 광고(베타) -> 리워드 광고로 수정 했습니다. 
  - 광고의 경우 개발자가 테스트 한다고 막 클릭할수가 없습니다.ㅠㅠ 
  - 개발용 광고로 테스트 하면 흑화현상이 없는데. 실제 광고로 하면 가끔 흑화 현상이 나오네요..ㅠㅠ 
  - ad 사이트 보니 전면 광고에 "베타" 라고 적혀 있어서 리워드 로 바꿔 보았습니다. 




---
1.7.8 (2022 04 07) 패치내역 :
1. 첫번째 라인 으로 안가던 버그 수정. 
2. (베타) 개행 정리 기능을 추가 했습니다. 
  -   쌍따옴표, 한글 쌍따옴표, [다.] 물음표, 느낌표, 홀따옴표 등등 19 가지 기준으로 개행을 실행합니다.
3. (베타) epub 를 텍스트로 변경 하면서 2번 개행처리도 같이 진행 하도록 수정 해 보았습니다.
4. (베타) 인공지능 이미지 텍스트 인식 기능을 추가 하였습니다. 
  - 인공지능이라 하니 뭔가 있어 보입니다. 
  - 근데 진짜 인공지능이 맞습니다. 물론 제가 만든건 아니고요. 구글 에서 만든 거에요. 
  - 한국어, 영어, 일본어, 중국어 를 지원합니다. 추후 구글에서 언어를 추가 하면 저도 추가하도록 하겠습니다. 
  - 그냥 쓰려고 했더니 용량이 140 메가 정도로 증가해서 안면익식, 번역기능 등 불필요한 학습데이터 제거 하였습니다. 그래도 19 메가 정도 증가 했네요. 
5. 압축 파일 선택시 OCR 버튼이, epub 는 텍스트 변환 버튼이 나오도록 ui 를 수정 하였습니다. 
6. 변환 된 파일은 내보내기 기능으로 저장 할 수 있습니다. (5초 광고 추가 하였습니다.)

7. 몇몇 광고를 추가 하였습니다. 
  - 1~5 초 이내 로 처리되는 로직은 전면광고 (1~7초) 를 띄우게 됩니다. (광고 시청중에도 백그라운드에서 로직이 처리 됩니다.)
  - ocr 의 경우 대략 1초당 6개 이미지를 처리 하기 때문에. 60 장이내는 전면광고. 60 장 이상은 30 초 리워드 광고를 띄우게 됩니다. 
  - 광고가 뜨는 중에도 백그라운드에서 로직을 처리 합니다. 
  - 광고는 맞지만 로딩화면 으로 사용하고 있다고 생각 해주시면 좋을꺼 같습니다.
  - 광고를 로딩 화면으로 사용하는건 제가 생각 하는 합리적인 광고 표현 방식이라 생각합니다. 

8. 인식률은 이미지 퀄리티에 따라 달라 지기 때문에 리사이즈 된 이미지 보다는 원본 이미지 를 사용 하시기 바랍니다. 
  - 리사이즈된 이미지도 어느정도 잘 나오더라고요. 저도 적용해 보고 좀 놀랐습니다. 


""";

  @override
  Widget build(BuildContext context) {
    return IsarCtl.rxSetting((ctx, setting) {
      return StreamBuilder<PackageInfo>(
        stream: PackageInfo.fromPlatform().asStream(),
        builder: ((context, snapshot) {
          if (snapshot.data == null) return SizedBox();

          return ListTile(
            onTap: () async {
              // 1.4.3
              await Get.dialog(AlertDialog(
                title: Text("${snapshot.data!.version} 버전이 출시 되었습니다."),
                content: SingleChildScrollView(
                  child: Text(content),
                ),
                actions: [
                  ElevatedButton(
                      onPressed: () {
                        Get.back();
                      },
                      child: Text("confirm".tr))
                ],
              ));

              IsarCtl.putSetting(setting..lastDevVersion = snapshot.data!.version);
            },
            title: Row(
              children: [
                Text("Developer notes".tr),
                SizedBox(width: 10),
                snapshot.data!.version == setting.lastDevVersion
                    ? SizedBox()
                    : Icon(
                        Icons.fiber_new,
                        color: Colors.orange,
                      ),
              ],
            ),
          );
        }),
      );
    });
  }
}
